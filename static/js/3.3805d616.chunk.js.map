{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","type","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","Textarea","Object","keys","contacts","map","key","className","style","formSummaryError","ProfileData","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","isOwner","onClick","goToEditMode","Contacts","s","contact","ProfileInfo","Preloader","src","photos","large","userPhoto","alt","mainPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","Post","item","message","likeCounter","maxLength10","maxLengthCreator","MyPosts","React","memo","postsArray","posts","elem","id","likesCounter","postsBlock","AddPostFormRedux","values","addPost","newPostText","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3805d616.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3jGT8\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3TPAk\",\"contact\":\"ProfileInfo_contact__21Y_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1YLFh\",\"posts\":\"MyPosts_posts__2v-j0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2F9Rn\"};","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// import s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    },[props, status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            { !editMode ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    \r\n                    <input type=\"text\" autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport style from \"./../../Common/FormsControls/FormsControls.module.css\"\r\nconst ProfileDataForm = ({ handleSubmit, profile,error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <b>Full name: </b> {createField(\"Full Name\", 'fullName', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>AboutMe : </b> {createField('About me', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job : </b> {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n        </div>\r\n        <div>\r\n            <b>My skills: </b> {createField('My skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {      \r\n                return <div key={key}>\r\n                    {key} {createField(key, 'contacts.' + key, [], Input)}\r\n                    {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n                </div>\r\n                \r\n            })}\r\n        </div>\r\n        <button>Save changes</button>\r\n    </form>\r\n};\r\nexport default reduxForm({ form: 'edit-profile' })(ProfileDataForm)","import React, { useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport userPhoto from '../../../assets/images/avatar.jpg'\r\n\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm  from './ProfileDataForm'\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = e => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = formData => {\r\n        props.saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <img src={props.profile.photos.large || userPhoto} alt='' className={s.mainPhoto} />\r\n            {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n            {editMode ?\r\n                <ProfileDataForm {...props} initialValues={props.profile} onSubmit={onSubmit} /> :\r\n                <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />\r\n            }\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    );\r\n}\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        <div>\r\n            <b>Full name: </b> {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>AboutMe : </b> {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job : </b> {!props.profile.lookingForAJob ? \"no\" : \"yes\"}\r\n        </div>\r\n        {\r\n            props.profile.lookingForAJob &&\r\n            <div>\r\n                <b>My skills: </b> {props.profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(props.profile.contacts).map(key => {\r\n                return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n        {\r\n            props.isOwner &&\r\n            <button onClick={props.goToEditMode}>Edit profile</button>\r\n        }\r\n    </div>\r\n}\r\nexport const Contacts = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>{contactValue}</div>\r\n}\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.vokrug.tv/pic/product/6/f/e/2/6fe2523ab4de68e3981b29c9f9f00f17.jpeg\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>Like - </span>{props.likeCounter}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls'\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    let postsArray = props.posts.map(elem => <Post key={elem.id} message={elem.message} likeCounter={elem.likesCounter} />)\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsArray}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n})\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newPostText' placeholder=\"text\" validate={[required, maxLength10]} /> <br />\r\n        <button >Add Post</button>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm({ form: 'myPostsaddMessageForm' })(AddPostForm)\r\nexport default MyPosts","\r\nimport { addPostCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts'; \r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostCreator(newPostText)) }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from 'react'\r\n// import s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsConteiner';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                saveProfile={props.saveProfile} />\r\n\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus,savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) { this.refreshProfile() }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus,savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}