{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","type","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","src","alt","photos","large","Preloader","Post","className","s","item","message","likeCounter","maxLength10","maxLengthCreator","MyPosts","memo","postsArray","posts","map","elem","likesCounter","key","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","console","log","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f43d3d9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3jGT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1YLFh\",\"posts\":\"MyPosts_posts__2v-j0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2F9Rn\"};","import React from 'react'\r\n\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    \r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevStatus){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                { !this.state.editMode ?\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"--------\"}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input  type=\"text\" autoFocus={true} onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ProfileStatus","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    },[props, status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            { !editMode ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    \r\n                    <input type=\"text\" autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nimport Preloader from '../../Common/Preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div >\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS9P72qc0tQJD-gL7SmW6l5fo-D1naUm57xRQ&usqp=CAU\" alt='' />\r\n            </div>\r\n            \r\n            <img src={ props.profile.photos.large } alt='' />\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.vokrug.tv/pic/product/6/f/e/2/6fe2523ab4de68e3981b29c9f9f00f17.jpeg\" />\r\n            {props.message}\r\n            <div>\r\n                <span>Like - </span>{props.likeCounter}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators'\r\nimport {Textarea} from '../../Common/FormsControls/FormsControls'\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }   \r\n\r\n    let postsArray = props.posts.map(elem => <Post message={elem.message} likeCounter={elem.likesCounter} key={elem.id} />)\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <div>\r\n               <AddPostFormRedux onSubmit={addPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsArray}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n})\r\n    const AddPostForm = (props) => {\r\n        return <form onSubmit={props.handleSubmit}>\r\n                <Field component={Textarea} name='newPostText' placeholder=\"text\" validate={[required, maxLength10]}  /> <br />\r\n                <button >Add Post</button>\r\n        </form>\r\n    }\r\n    const AddPostFormRedux = reduxForm({form:'myPostsaddMessageForm'})( AddPostForm )\r\nexport default MyPosts","import React from 'react'\r\nimport { addPostCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts'; \r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => { dispatch(addPostCreator(newPostText)) }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from 'react'\r\n// import s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsConteiner';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/> \r\n            \r\n            <MyPostsContainer   />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        console.log(userId)\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}